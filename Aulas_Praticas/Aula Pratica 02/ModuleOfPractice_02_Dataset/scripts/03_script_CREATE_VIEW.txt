--#############
--# Paulo Trigo
--#############


--==============
-- DB connection
--==============
\set dataBase db_operational
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================


-- additional information about "client_encoding" in:
-- http://www.postgresql.org/docs/9.6/static/multibyte.html
\encoding WIN1250
;



---------------------------------
DROP VIEW IF EXISTS v1_dataset;
DROP VIEW IF EXISTS v1;
DROP VIEW IF EXISTS v1_domain;
DROP VIEW IF EXISTS v1_class;
DROP VIEW IF EXISTS v2_dataset;
DROP VIEW IF EXISTS v2_attrType;
---------------------------------



-- complete the following view in order to build
-- the output data presented below at [OUT]
   CREATE VIEW v1( VC1, VC2, VC3 ) AS
	SELECT table2.c1, 
	       table1.c1,
           table3.c1
	FROM R1 as table1
	LEFT JOIN R2 as table2 ON table2.c1_r1 = table1.c1
	LEFT JOIN R3 as table3 ON table3.c1_r1 = table1.c1
   WHERE table1.c1 < 3;

--==========================
-- [OUT] The expected output
--==========================

--| vc1 | vc2 |    vc3
--|-----+-----+------------
--| 111 |   1 | 2012-01-31
--| 111 |   1 | 2012-02-28
--| 222 |   2 | 2012-03-31
--|(3 rows)


-- after completing the previous code uncomment the following 2 lines
 	SELECT VC1, VC2, VC3
  	FROM v1;


-- create statement from v1_domain

CREATE View v1_domain AS
   SELECT 
   varchar(8) '000' AS VC1,
   integer '0' AS VC2,
   date '2020-04-04' AS VC3;
			
SELECT * FROM v1_domain;

-- 3C) SELECT v1_domain with v1, and v1_domain being always on top

   SELECT * FROM v1_domain
   UNION
   SELECT * FROM v1;

--3D) create the view called "v1_dataset"

   CREATE VIEW v1_dataset( VC1, VC2, VC3 ) AS
   SELECT *, 1 AS SEQ FROM v1_domain
   UNION
   SELECT *, 2 AS SEQ FROM v1
   ORDER BY SEQ;
   
   SELECT * FROM v1_dataset

--3E) populating the view called "v1_dataset" with additional tupples and notes on the behaviour
   
	

-- Follow the "practiceGuide.pdf" until arriving at this goal:
-- create the "dataset view" compatible with the Orange "3-Row-Header" format
-- CREATE VIEW v1_dataset( my_order, VC1, VC2, VC3 ) AS
-- ;




-- Follow the "practiceGuide.pdf" until arriving at this goal:
-- create the "dataset view" compatible with the Orange "Header-with-Attribute-Type" format
-- CREATE VIEW v2_dataset( my_order, VC1, VC2, VC3 ) AS
-- ;



