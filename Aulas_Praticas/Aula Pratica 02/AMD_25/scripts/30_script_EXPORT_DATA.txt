--#############
--# Paulo Trigo
--#############


--==============
-- DB connection
--==============
\set dataBase db_operational
;
\set userName postgres
;
\connect :dataBase :userName
;
--==========================
--==========================



--==========================
-- [PRS: ADAPT]
-- the file path where to write the data
-- \set filePath 'YOUR_DRIVE:/YOUR_PATH/yourFileName.txt'
--==========================


--==============================
-- export to text data file
--==============================
-- the COPY SQL statement executes wihin server context and thus uses postgreSQL user's credentials
-- very important: "\o" psdql statement redirects the STDOUT into a file path - this way it uses client credentials intead of server credentials
-- \o :filePath



--==============================
-- the COPY PostgreSQL statement
-- for detailed information see:
-- d01_postgresql-9.6-A4.pdf, page 1402, or
-- http://www.postgresql.org/docs/9.6/static/sql-copy.html
--==============================

   COPY (SELECT * FROM v1) TO '(Remove parathenses and insert path here)\2b_i_result.csv' WITH (FORMAT CSV, FORCE_QUOTE *, DELIMITER ';', HEADER);

--
--

--==============================
-- a different solution using the \COPY psql statement
-- Performs a frontend (client) copy. This is an operation that runs an SQL COPY command,
-- but instead of the server reading or writing the specified file,
-- psql reads or writes the file and routes the data between the server and the local file system.
-- This means that file accessibility and privileges are those of the local user, not the server,
-- and no SQL superuser privileges are required.
--
-- for detailed information see:
-- d02_psql_withPostgreSQL.pdf, or
-- http://www.postgresql.org/docs/9.6/static/app-psql.html
--==============================
  \COPY (SELECT * FROM v1) TO 'C:\Users\Madrinho\Desktop\result.csv' WITH (FORMAT CSV, FORCE_QUOTE *, DELIMITER ';', HEADER);

-- Este comando tem uma síntaxe idêntica à do SQL Copy, no entanto tem acesso ao computador local do utilizador, pelo que apenas precisa dos requisitos to utilizador (do SO)
-- para escrever no File System. Ao contrário do SQL copy, não precisa de ser feito com um postgres super user, pois já tem as permissoes de escrita necessarias através do 
-- utilizador do SO.

